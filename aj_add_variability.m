function [p_variation, noisy_p, ellipse_variation] = ...
    aj_add_anatomical_variability(p, ellipse, jitter_factor, noise_level, plot_fig)
% add_anatomical_variability Adds anatomical variability and noise to a 3D aj_create_pahntom_3d
% 
% INPUTS:
% p           : Original phantom volume
% ellipse     : Original ellipsoid parameters (as generated by aj_shepplogan_3d)
% jitter_factor: Maximum random jitter for anatomical variability (e.g., 0.1 for 10% jitter)
% noise_level : Variance of Gaussian noise to add to the image signal
% plot_fig    : Boolean flag to plot resulting profiles or not
%
% OUTPUTS:
% p_variation     : Phantom with anatomical variability
% noisy_p         : Phantom with anatomical variability and noise
% ellipse_variation: Ellipsoid parameters with variability

%% Default parameters
if nargin < 5, plot_fig = false; end
if nargin < 4, noise_level = []; end
if nargin < 3, jitter_factor = []; end

% Définir une gamme raisonnable pour le jitter et le noise
% La gamme de jitter dépend de la taille des ellipsoïdes (a, b, c)
% et la gamme de bruit dépend de l'intensité de l'image.

%% Analyse des paramètres des ellipsoïdes pour définir la gamme de jitter
jitter_range = [0.01, 0.1];

if isempty(jitter_factor) || jitter_factor < jitter_range(1) || jitter_factor > jitter_range(2)
    jitter_factor = mean(jitter_range); % default value = 0.05
    disp(['Jitter factor hors de la gamme recommandée, défini à la valeur par défaut de ', num2str(jitter_factor)]);
end

%% Analyse des statistiques d'image pour définir la gamme de bruit
image_std = std(p(:)); % Écart-type des intensités dans l'image
noise_range = [0.01 * image_std, 0.1 * image_std]; % Gamme de bruit entre 1% et 10% de l'écart-type

% Si noise_level n'est pas spécifié ou est en dehors de la gamme, définir une valeur par défaut
if isempty(noise_level) || noise_level < noise_range(1) || noise_level > noise_range(2)
    noise_level = mean(noise_range); % Défaut à 5% de l'écart-type si en dehors de la gamme
    disp(['Niveau de bruit hors de la gamme recommandée, défini à la valeur par défaut de ', num2str(noise_level)]);
end

%% Introduire de la variabilité anatomique
% Make a copy of the original ellipse parameters to introduce variability
ellipse_variation = ellipse;

num_ellipsoids = size(ellipse, 1);
for k = 1:num_ellipsoids
    ellipse_variation(k, 2) = ellipse(k, 2) + (2 * randi([0, 1]) - 1) * jitter_factor * ellipse(k, 2) * rand(1);
    ellipse_variation(k, 3) = ellipse(k, 3) + (2 * randi([0, 1]) - 1) * jitter_factor * ellipse(k, 3) * rand(1);
    ellipse_variation(k, 4) = ellipse(k, 4) + (2 * randi([0, 1]) - 1) * jitter_factor * ellipse(k, 4) * rand(1);
    ellipse_variation(k, 5) = ellipse(k, 5) + (2 * randi([0, 1]) - 1) * jitter_factor * ellipse(k, 5) * rand(1);
    ellipse_variation(k, 6) = ellipse(k, 6) + (2 * randi([0, 1]) - 1) * jitter_factor * ellipse(k, 6) * rand(1);
    ellipse_variation(k, 7) = ellipse(k, 7) + (2 * randi([0, 1]) - 1) * jitter_factor * ellipse(k, 7) * rand(1);
    ellipse_variation(k, 8) = ellipse(k, 8) + (2 * randi([0, 1]) - 1) * jitter_factor * ellipse(k, 8) * rand(1);
    ellipse_variation(k, 9) = ellipse(k, 9) + (2 * randi([0, 1]) - 1) * jitter_factor * ellipse(k, 9) * rand(1);
    ellipse_variation(k, 10) = ellipse(k, 10) + (2 * randi([0, 1]) - 1) * jitter_factor * ellipse(k, 10) * rand(1);
end

% Générer la nouvelle image du phantom avec la variabilité
[p_variation, ~] = aj_create_phantom_3d(ellipse_variation, size(p, 1));

%% Ajouter du bruit au signal
noisy_p = p_variation + noise_level * randn(size(p_variation));

%% Optionnel : Visualisation des résultats
if plot_fig
    figure;
    
    % Visualisation de la coupe centrale de l'image originale, variable et bruitée
    slice_num = round(size(p, 1) / 2);
    
    % Image originale
    subplot(1, 3, 1);
    imagesc(squeeze(p(:, :, slice_num)));
    title('Original Phantom');
    colormap gray;
    axis image;
    
    % Phantom avec variabilité anatomique
    subplot(1, 3, 2);
    imagesc(squeeze(p_variation(:, :, slice_num)));
    title('Anatomical Variability');
    colormap gray;
    axis image;
    
    % Phantom avec variabilité anatomique et bruit
    subplot(1, 3, 3);
    imagesc(squeeze(noisy_p(:, :, slice_num)));
    title('Anatomical Variability + Noise');
    colormap gray;
    axis image;
end

end
